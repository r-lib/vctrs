% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recycle.R
\name{vector_recycling_rules}
\alias{vector_recycling_rules}
\title{Recycling rules used by r-lib and the tidyverse}
\description{
Recycling describes the concept of repeating elements of one vector to match
the size of another vector. There are two rules that guide the recycling
process used by packages in r-lib and the tidyverse:
\itemize{
\item Vectors of size 1 will be recycled to the size of any other vector
\item Otherwise, all vectors must have the same size
}
}
\section{Examples}{


Vectors of size 1 are recycled to the size of any other vector:

\if{html}{\out{<div class="sourceCode">}}\preformatted{vec_recycle_common(1:3, 1)
#> [[1]]
#> [1] 1 2 3
#>
#> [[2]]
#> [1] 1 1 1
}\if{html}{\out{</div>}}

This includes vectors of size 0:

\if{html}{\out{<div class="sourceCode">}}\preformatted{vec_recycle_common(integer(), 1)
#> [[1]]
#> integer(0)
#>
#> [[2]]
#> numeric(0)
}\if{html}{\out{</div>}}

If vectors aren't size 1, they must all be the same size:

\if{html}{\out{<div class="sourceCode">}}\preformatted{# This is fine, all vectors are the same size
vec_recycle_common(1:3, 4:6)
#> [[1]]
#> [1] 1 2 3
#>
#> [[2]]
#> [1] 4 5 6

# This is an error
vec_recycle_common(1:3, 4:7)
#> Error:
#> ! Can't recycle `..1` (size 3) to match `..2` (size 4).
}\if{html}{\out{</div>}}
}

\section{Differences with base R}{


The recycling rules described here are stricter than the ones generally used
by base R. With base R, the rules are usually:
\itemize{
\item If any vector is length 0, the output will be length 0
\item Otherwise, the output will be length \code{max(length_x, length_y)}, and a
warning will be thrown if the length of the longer vector is not an integer
multiple of the length of the shorter vector.
}

\if{html}{\out{<div class="sourceCode">}}\preformatted{# max(2, 4) == 4
# 1:2 is fully recycled to c(1:2, 1:2)
1:2 + 1:4
#> [1] 2 4 4 6

# max(3, 4) == 4, with a warning
# 1:3 is partially recycled to c(1:3, 1)
1:3 + 1:4
#> Warning in 1:3 + 1:4: longer object length is not a multiple of shorter object
#> length
#> [1] 2 4 6 5

# Length 0 vector overrides any other length
1 + numeric()
#> numeric(0)
1:3 + numeric()
#> numeric(0)
}\if{html}{\out{</div>}}

These rules come from the \href{https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Recycling-rules}{R Language Definition}
and are mainly focused on arithmetic. Outside of arithmetic, these rules are
not followed consistently:

\if{html}{\out{<div class="sourceCode">}}\preformatted{# Silent recycling
atan2(1:3, 1:2)
#> [1] 0.7853982 0.7853982 1.2490458

# Taking `max(3, 0)` rather than recycling to length 0
paste(1:3, integer())
#> [1] "1 " "2 " "3 "

# R 4.0.1 added `recycle0` for this case
paste(1:3, integer(), recycle0 = TRUE)
#> character(0)

# Erroring rather than recycling
data.frame(1:2, 1:3)
#> Error in base::data.frame(..., stringsAsFactors = stringsAsFactors):
#> arguments imply differing number of rows: 2, 3
}\if{html}{\out{</div>}}
}

